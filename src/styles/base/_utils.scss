@if $device == "desktop" {
  .container {
    @include center-block();
    @include clearfix();

    @if $box-sizing == border-box and value-of($container-padding) > 0 {
      padding-left: $container-padding;
      padding-right: $container-padding;
    }

    @if $container-max-width and value-of($container-max-width) > 0 {
      max-width: $container-max-width * 1px;

      @if $legacy-ie <= 7 {
        *width: expression(this.offsetWidth > #{$container-max-width} ? "#{$container-max-width * 1px}" : "auto");
        *overflow: hidden;
      }
    }
  }
}

.table {
  width: 100%;
  border: 1px solid $table-border-color;

  th,
  td {
    border: 1px solid $table-border-color;
    padding: $root-font-size * .5;
  }
}

.table-striped tbody tr:nth-of-type(odd) {
  background-color: $table-strip-color;
}

.table-hover tbody tr:hover {
  background-color: $table-hover-color;
}

@mixin btn-color($color, $is-ghost: false) {

  $border-color: null;
  $font-color: null;
  $background-color: null;

  @if ($is-ghost) {
    border-color: $color;
    color: $color;

    &:focus:not(:disabled),
    &:hover:not(:disabled) {
      border-color: darken($color, 5%);
      background-color: darken($color, 5%);
      color: #fff;
    }
  } @else {
    border-color: transparent;
    background-color: $color;
    color: #fff;

    &:focus:not(:disabled),
    &:hover:not(:disabled) {
      background-color: darken($color, 5%);
    }
  }
}

